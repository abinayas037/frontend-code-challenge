{"version":3,"sources":["components/FilteredPokemons.jsx","components/App.jsx","index.js","images/notFound.jpg"],"names":["FilteredPokemons","props","pokemons","React","useState","query","setQuery","filteredPokemons","setFilteredPokemons","useMemo","result","filter","pokemon","Name","Types","toLowerCase","includes","useSearch","htmlFor","className","type","id","placeholder","value","onChange","e","target","map","key","Number","src","img","alt","length","notFoundLogo","URL_PATH","App","state","data","loading","error","fetchPokemons","a","async","setState","fetch","response","json","message","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"kTAiEeA,MA9Cf,SAA0BC,GAAQ,IAAD,EAhBjC,SAAmBC,GAAW,IAAD,EACDC,IAAMC,SAAS,IADd,mBACpBC,EADoB,KACbC,EADa,OAEqBH,IAAMC,SAASF,GAFpC,mBAEpBK,EAFoB,KAEFC,EAFE,KAa3B,OATAL,IAAMM,SAAQ,WACZ,IAAMC,EAASR,EAASS,QAAO,SAACC,GAC9B,MAAO,UAAGA,EAAQC,KAAX,YAAmBD,EAAQE,MAAM,IACrCC,cACAC,SAASX,EAAMU,kBAEpBP,EAAoBE,KACnB,CAACR,EAAUG,IAEP,CAAEA,QAAOC,WAAUC,oBAIoBU,CAAUhB,EAAMC,UAAtDG,EADuB,EACvBA,MAAOC,EADgB,EAChBA,SAAUC,EADM,EACNA,iBAEzB,OACE,oCACE,2BAAOW,QAAQ,QAAQC,UAAU,UAC/B,2BAAOC,KAAK,WAAWC,GAAG,UAC1B,yDAEF,2BACED,KAAK,OACLD,UAAU,QACVG,YAAY,kBACZC,MAAOlB,EACPmB,SAAU,SAACC,GACTnB,EAASmB,EAAEC,OAAOH,UAGtB,wBAAIJ,UAAU,eACXZ,EAAiBoB,KAAI,SAACf,GAAD,OACpB,wBAAIgB,IAAKhB,EAAQiB,QACf,yBAAKC,IAAKlB,EAAQmB,IAAKC,IAAI,YAC3B,yBAAKb,UAAU,QACb,4BACE,0BAAMA,UAAU,MAAMP,EAAQC,OAEhC,0BAAMM,UAAU,iBAAiBP,EAAQE,MAAM,IAC9CF,EAAQE,MAAM,IACb,0BAAMK,UAAU,eAAeP,EAAQE,MAAM,SAKxB,IAA5BP,EAAiB0B,QAChB,4BACE,yBAAKH,IAAKI,IAAcF,IAAI,KAC5B,yBAAKb,UAAU,QACb,wBAAIA,UAAU,cAAd,mBCpDRgB,G,MACJ,yIAuCaC,E,2MApCbC,MAAQ,CACNC,KAAM,GACNC,SAAS,EACTC,MAAO,M,EAGTC,cAAgB,4BAAAC,EAAAC,OAAA,uDACd,EAAKC,SAAS,CAAEL,SAAS,EAAMC,MAAO,OADxB,oBAAAE,EAAA,MAIWG,MAAMV,IAJjB,cAINW,EAJM,kBAAAJ,EAAA,MAKOI,EAASC,QALhB,OAKNT,EALM,OAMZ,EAAKM,SAAS,CAAEL,SAAS,EAAOD,KAAMA,IAN1B,kDAQZ,EAAKM,SAAS,CAAEL,SAAS,EAAOC,MAAO,KAAMQ,UARjC,0D,mFAadC,KAAKR,kB,+BAIL,OAAIQ,KAAKZ,MAAMG,MACN,oDAA0BS,KAAKZ,MAAMG,MAAMQ,SAIlD,oCACGC,KAAKZ,MAAME,SAAW,yBAAKpB,UAAU,WACtC,kBAAC,EAAD,CAAkBjB,SAAU+C,KAAKZ,MAAMC,Y,GA/B7BnC,IAAM+C,WCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.f9380b09.chunk.js","sourcesContent":["import React from \"react\";\nimport notFoundLogo from \"../images/notFound.jpg\";\n\nfunction useSearch(pokemons) {\n  const [query, setQuery] = React.useState(\"\");\n  const [filteredPokemons, setFilteredPokemons] = React.useState(pokemons);\n\n  React.useMemo(() => {\n    const result = pokemons.filter((pokemon) => {\n      return `${pokemon.Name} ${pokemon.Types[0]}`\n        .toLowerCase()\n        .includes(query.toLowerCase());\n    });\n    setFilteredPokemons(result);\n  }, [pokemons, query]);\n\n  return { query, setQuery, filteredPokemons };\n}\n\nfunction FilteredPokemons(props) {\n  const { query, setQuery, filteredPokemons } = useSearch(props.pokemons);\n\n  return (\n    <>\n      <label htmlFor=\"maxCP\" className=\"max-cp\">\n        <input type=\"checkbox\" id=\"maxCP\" />\n        <small>Maximum Combat Points</small>\n      </label>\n      <input\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Pokemon or type\"\n        value={query}\n        onChange={(e) => {\n          setQuery(e.target.value);\n        }}\n      />\n      <ul className=\"suggestions\">\n        {filteredPokemons.map((pokemon) => (\n          <li key={pokemon.Number}>\n            <img src={pokemon.img} alt=\"pokemon\" />\n            <div className=\"info\">\n              <h1>\n                <span className=\"hl\">{pokemon.Name}</span>\n              </h1>\n              <span className=\"type electric\">{pokemon.Types[0]}</span>\n              {pokemon.Types[1] && (\n                <span className=\"type normal\">{pokemon.Types[1]}</span>\n              )}\n            </div>\n          </li>\n        ))}\n        {filteredPokemons.length === 0 && (\n          <li>\n            <img src={notFoundLogo} alt=\"\" />\n            <div className=\"info\">\n              <h1 className=\"no-results\">No results</h1>\n            </div>\n          </li>\n        )}\n      </ul>\n    </>\n  );\n}\n\nexport default FilteredPokemons;\n","import React from \"react\";\nimport FilteredPokemons from \"./FilteredPokemons\";\nimport \"./styles/App.css\";\n\nconst URL_PATH =\n  \"https://gist.githubusercontent.com/bar0191/fae6084225b608f25e98b733864a102b/raw/dea83ea9cf4a8a6022bfc89a8ae8df5ab05b6dcc/pokemon.json\";\n\nclass App extends React.Component {\n  state = {\n    data: [],\n    loading: false,\n    error: null,\n  };\n\n  fetchPokemons = async () => {\n    this.setState({ loading: true, error: null });\n\n    try {\n      const response = await fetch(URL_PATH);\n      const data = await response.json();\n      this.setState({ loading: false, data: data });\n    } catch (error) {\n      this.setState({ loading: false, error: error.message });\n    }\n  };\n\n  componentDidMount() {\n    this.fetchPokemons();\n  }\n\n  render() {\n    if (this.state.error) {\n      return <p>An error has ocurred: {this.state.error.message}</p>;\n    }\n\n    return (\n      <>\n        {this.state.loading && <div className=\"loader\"></div>}\n        <FilteredPokemons pokemons={this.state.data} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/notFound.60b25233.jpg\";"],"sourceRoot":""}